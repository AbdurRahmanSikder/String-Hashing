#include <iostream>
#include <cmath>

typedef unsigned int HashType;
const HashType Base1 = 31;
const HashType Mod1 = 1000000007;
const HashType Base2 = 37;
const HashType Mod2 = 1000000009;

void DoubleHash(const std::string& s, HashType& hash1, HashType& hash2) {
  hash1 = 0;
  hash2 = 0;
  for (int i = 0; i < s.size(); i++) {
    hash1 = (hash1 * Base1 + s[i]) % Mod1;
    hash2 = (hash2 * Base2 + s[i]) % Mod2;
  }
}

void DoubleHashRoll(HashType& hash1, HashType& hash2, char c_out, char c_in, int length) {
  HashType power1 = std::pow(Base1, length);
  hash1 = ((hash1 + Mod1 - c_out * power1 % Mod1) * Base1 + c_in) % Mod1;
  hash2 = ((hash2 + Mod2 - c_out * power1 % Mod2) * Base2 + c_in) % Mod2;
}

int main() {
  std::string s = "hello";
  HashType hash1, hash2;
  DoubleHash(s, hash1, hash2);
  std::cout << hash1 << " " << hash2 << std::endl;
  return 0;
}
